import rclpy
from rclpy.node import Node
import numpy as np
import matplotlib.pyplot as plt
from custom_msgs.msg import Goal
from nav_msgs.msg import Path

# Global variables to store x and y coordinates
x_coordinate = []
y_coordinate = []
i = 0

class GoalNode(Node):
    def __init__(self):
        super().__init__('GoalNode')
        global x_coordinate, y_coordinate

        # Subscriber to the '/plan' topic that receives Path messages generated by Nav2
        self.sub = self.create_subscription(Path, '/plan', self.callback, 10)
        
        # Publisher to the '/goal_topic' topic that sends Goal messages
        self.pub = self.create_publisher(Goal, '/goal_topic', 10)
        
        # Timer to periodically publish Goal messages
        self.timer_ = self.create_timer(0.1, self.timer_callback)

    def timer_callback(self):
        global Goal1
        # Publish the Goal message periodically
        self.pub.publish(Goal1)
        
    def callback(self, msg: Path):
        global Goal1, i
        # Extract x and y coordinates from the Path message
        self.x_coordinates = [pose.pose.position.x for pose in msg.poses]
        self.y_coordinates = [pose.pose.position.y for pose in msg.poses]
        
        # Convert coordinates to numpy arrays and assign to Goal1
        Goal1.x_coordinates = np.array(self.x_coordinates)
        Goal1.y_coordinates = np.array(self.y_coordinates)
        
        # Log received goals for debugging purposes
        self.get_logger().info(f'Goals received')
        self.get_logger().info(f'{Goal1}')
        i = 1

def main(args=None):
    global Goal1
    
    rclpy.init(args=args)
    Goal1 = Goal()
    goal = GoalNode()
    rclpy.spin(goal)
    goal.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
